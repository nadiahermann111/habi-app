import React, { useState, useCallback, useRef } from 'react';
import './HabiSection.css';
import HabiHappyAdult from './HabiAdultHappy.png';
import FoodControl from '../FoodControl/FoodControl';

const HabiSection = () => {
  const [showMessage, setShowMessage] = useState(false);
  const [currentMessage, setCurrentMessage] = useState('');
  const timeoutRef = useRef(null);
  const lastClickTime = useRef(0);

  // Rozszerzona lista motywacyjnych wiadomo≈õci
  const motivationalMessages = [
    "≈öwietnie Ci idzie! üí™",
    "Jeste≈õ niesamowity! ‚≠ê",
    "Dumny jestem z Ciebie! üéâ",
    "Ka≈ºdy dzie≈Ñ to nowy poczƒÖtek! üåÖ",
    "Wierzƒô w Ciebie! üíô",
    "Ma≈Çymi krokami osiƒÖgniesz wielkie rzeczy! üë£",
    "Twoja determinacja mnie inspiruje! ‚ú®",
    "Jeste≈õ silniejszy ni≈º my≈õlisz! üí™",
    "Dzi≈õ robimy postƒôpy! üöÄ",
    "Wspaniale sobie radzisz! üåü",
    "Jestem z Ciebie bardzo dumny! üèÜ",
    "Nie poddawaj siƒô - jeste≈õ blisko celu! üéØ",
    "Ka≈ºdy sukces zaczyna siƒô od pierwszego kroku! üëü",
    "Twoja wytrwa≈Ço≈õƒá przynosi owoce! üçé",
    "Robisz niesamowite postƒôpy! üìà",
    "Pamiƒôtaj - jeste≈õ championem! ü•á",
    "Twoje nawyki budujƒÖ lepsze jutro! üåà",
    "Jestem tu, ≈ºeby Ciƒô wspieraƒá! ü§ó",
    "Wow, jakie osiƒÖgniƒôcia! üéä",
    "Razem osiƒÖgniemy wszystko! ü§ù",
    "Jestem z Ciebie mega dumny! üåü",
    "Kontynuuj ≈õwietnƒÖ robotƒô! üëè",
    "Twoja si≈Ça woli jest niesamowita! üî•",
    "Ka≈ºdy ma≈Çy krok siƒô liczy! ü¶∂",
    "Jeste≈õ na w≈Ça≈õciwej drodze! üõ§Ô∏è",
    "Tw√≥j wysi≈Çek siƒô op≈Çaca! üíé",
    "Nigdy siƒô nie poddawaj! üíØ",
    "Jeste≈õ prawdziwym wojownikiem! ‚öîÔ∏è",
    "Twoja konsekwencja mnie zachwyca! üå∫",
    "Trzymaj tak dalej! üéØ",
    "Ka≈ºdy dzie≈Ñ jeste≈õ lepszy! üìä",
    "Twoje zaanga≈ºowanie jest inspirujƒÖce! üé®",
    "Wierzƒô w Tw√≥j sukces! üå†",
    "Jeste≈õ na dobrej drodze! üõ£Ô∏è",
    "Tw√≥j progres jest widoczny! üëÄ",
    "Gratulacje postƒôp√≥w! ü•≥",
    "Jestem Twoim najwiƒôkszym fanem! üé≠",
    "Twoja energia mnie motywuje! ‚ö°",
    "Wsp√≥lnie zbudujemy lepsze jutro! üèóÔ∏è",
    "Jeste≈õ moim bohaterem! ü¶∏",
    "Twoja determinacja jest zara≈∫liwa! üòä",
    "Ka≈ºdy krok przybli≈ºa Ciƒô do celu! üé™",
    "Twoja si≈Ça charakteru zachwyca! üí´",
    "Jestem dumnƒÖ ma≈ÇpkƒÖ! üêµ",
    "Razem jeste≈õmy niezwyciƒô≈ºeni! üõ°Ô∏è",
    "Tw√≥j entuzjazm jest zara≈∫liwy! üòÑ",
    "Jeste≈õ mistrzem nawykow! üèÖ",
    "Ka≈ºdy dzie≈Ñ to nowa szansa! üåÑ",
    "Tw√≥j postƒôp mnie cieszy! üòä",
    "Jeste≈õ cudowny! üå∏"
  ];

  // Funkcja obs≈ÇugujƒÖca klikniƒôcie z debouncing
  const handleHabiClick = useCallback(() => {
    const now = Date.now();

    // Debouncing - zapobiega zbyt czƒôstym klikniƒôciom (500ms)
    if (now - lastClickTime.current < 500) {
      return;
    }

    lastClickTime.current = now;

    // Wyczy≈õƒá poprzedni timeout je≈õli istnieje
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }

    // Ukryj poprzedniƒÖ wiadomo≈õƒá natychmiast
    setShowMessage(false);

    // Po kr√≥tkiej przerwie poka≈º nowƒÖ wiadomo≈õƒá
    setTimeout(() => {
      const randomIndex = Math.floor(Math.random() * motivationalMessages.length);
      setCurrentMessage(motivationalMessages[randomIndex]);
      setShowMessage(true);

      // Ustaw timeout do ukrycia wiadomo≈õci
      timeoutRef.current = setTimeout(() => {
        setShowMessage(false);
      }, 2500);
    }, 50);
  }, [motivationalMessages]);

  // Cleanup timeout przy unmount
  React.useEffect(() => {
    return () => {
      if (timeoutRef.current) {
        clearTimeout(timeoutRef.current);
      }
    };
  }, []);

  return (
    <div className="habi-section">
      <div className="habi-card">
        <h3>Twoja ma≈Çpka Habi</h3>
        <div className="habi-content">
          <div className="habi-status">
            <div className="habi-avatar" onClick={handleHabiClick}>
              <img src={HabiHappyAdult} alt="Habi Happy Adult" />

              {showMessage && (
                <div className="habi-message-container">
                  <div className="habi-heart">‚ù§Ô∏è</div>
                  <div className="habi-message">{currentMessage}</div>
                </div>
              )}
            </div>
          </div>
          <FoodControl />
        </div>
      </div>
    </div>
  );
};

export default HabiSection;